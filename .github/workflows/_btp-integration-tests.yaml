name: btp integration tests

on:
  workflow_call:

jobs:
  btp-integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests/btp/hack
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - uses: ./.github/actions/setup-kyma
        with:
          path: "tests/btp/bin"
#      - name: Create btp account with kyma enable
#        run: |
#          sudo ln -sf bash /bin/sh
#          echo "$BTP_ENV" > $ENV_PATH
#          export $(cat $ENV_PATH | xargs)
#          tofu -chdir=../tf init
#          tofu -chdir=../tf apply -auto-approve
#        env:
#          ENV_PATH: /tmp/.env
#          BTP_ENV: ${{ secrets.BTP_INTEGRATION_TEST }}
#          TF_VAR_BTP_SUBACCOUNT: btp-test-${{ github.run_id }}-${{ github.run_attempt }}
#
#      - name: Generate access
#        run: |
#          sudo ln -sf bash /bin/sh
#          echo "$BTP_ENV" > $ENV_PATH
#          export $(cat $ENV_PATH | xargs)
#          mkdir -p tmp
#          make headless-kubeconfig
#          CLUSTERROLE=cluster-admin make service-account-kubeconfig
#        env:
#          ENV_PATH: /tmp/.env
#          BTP_ENV: ${{ secrets.BTP_INTEGRATION_TEST }}
#          TF_VAR_BTP_SUBACCOUNT: btp-test-${{ github.run_id }}-${{ github.run_attempt }}
#
#      - name: Add bindings
#        run: |
#          sudo ln -sf bash /bin/sh
#          echo "$BTP_ENV" > $ENV_PATH
#          export $(cat $ENV_PATH | xargs)
#          KUBECONFIG=tmp/sa-kubeconfig.yaml BTP_PROVIDER_SUBACCOUNT_ID=$TF_VAR_BTP_PROVIDER_SUBACCOUNT_ID make share-sm-service-operator-access
#          KUBECONFIG=tmp/sa-kubeconfig.yaml make create-object-store-reference
#          KUBECONFIG=tmp/sa-kubeconfig.yaml make enable_docker_registry
#        env:
#          ENV_PATH: /tmp/.env
#          BTP_ENV: ${{ secrets.BTP_INTEGRATION_TEST }}
#          TF_VAR_BTP_SUBACCOUNT: btp-test-${{ github.run_id }}-${{ github.run_attempt }}
#
#      - name: Test if docker registry is working
#        shell: bash
#        run: |
#          KUBECONFIG=tmp/sa-kubeconfig.yaml make docker_registry_login
#          KUBECONFIG=tmp/sa-kubeconfig.yaml make docker_push_simple_app
#          KUBECONFIG=tmp/sa-kubeconfig.yaml make deploy_simple_app
#
#      - name: Delete btp account
#        if: always()
#        run: |
#          sudo ln -sf bash /bin/sh
#          echo "$BTP_ENV" > $ENV_PATH
#          export $(cat $ENV_PATH | xargs)
#          kubectl delete -n kyma-system -f ../k8s-resources/dependencies/object-store-binding.yaml --kubeconfig tmp/sa-kubeconfig.yaml
#          kubectl delete serviceinstances.services.cloud.sap.com -n kyma-system object-store-reference --kubeconfig tmp/sa-kubeconfig.yaml
#          tofu -chdir=../tf init
#          tofu -chdir=../tf destroy -auto-approve
#        env:
#          ENV_PATH: /tmp/.env
#          BTP_ENV: ${{ secrets.BTP_INTEGRATION_TEST }}
#          TF_VAR_BTP_SUBACCOUNT: btp-test-${{ github.run_id }}-${{ github.run_attempt }}

      - name: Force delete btp account
        if: always()
        run: |
          sudo ln -sf bash /bin/sh
          pwd
          ls -la
          echo "BTP CLI not found!"
          echo "chleb 0"
          eval BTP_FILE=$(bash pwd | ./get_btp_file_name.sh "$(uname -s)" "$(uname -m)")
          echo "chleb 1"
          ## Detect if operating system
          [[ -z "$BTP_FILE" ]] && { echo "${OS_TYPE} ${OS_ARCH}" ; exit 1; }
          mkdir -p ../bin
          curl -LJO https://tools.hana.ondemand.com/additional/${BTP_FILE} --cookie "eula_3_2_agreed=tools.hana.ondemand.com/developer-license-3_2.txt"
          tar -zxf ${BTP_FILE} --strip-components=1 -C ../bin
          rm -f ${BTP_FILE}
          echo "BTP CLI downloaded into /bin/btp"
          ls -la
